{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export const STRING = Symbol('ENV_STRING')\nexport const NUMBER = Symbol('ENV_NUMBER')\nexport const OBJECT = Symbol('ENV_OBJECT')\nexport const DATE = Symbol('ENV_DATE')\nexport type EnvironmentType = typeof STRING | typeof NUMBER | typeof OBJECT | typeof DATE\ntype EnvironmentSchema = Record<symbol, EnvironmentType>\n\nfunction parseValue(value: string, type: EnvironmentType) {\n  switch (type) {\n    case NUMBER: {\n      return Number(value)\n    }\n\n    case OBJECT: {\n      return JSON.parse(value)\n    }\n\n    case DATE: {\n      return new Date(value)\n    }\n\n    default: {\n      return value\n    }\n  }\n}\n\nexport default function forceEnvironmentVars<E extends EnvironmentSchema>(\n  environmentSchema: E,\n  defaultValues: {\n    [key in keyof E]?: unknown\n  }\n) {\n  const envVars: {\n    [key in keyof E]?: unknown\n  } = {}\n\n  Object.entries(environmentSchema).forEach(([variableName, variableType]) => {\n    if (process.env[variableName]) {\n      envVars[variableName as keyof E] = parseValue(\n        process.env[variableName] as string,\n        variableType as EnvironmentType\n      )\n      return\n    }\n\n    const defaultValue = defaultValues[variableName as keyof E]\n    if (!defaultValue) {\n      throw new Error(`Environment Variable ${variableName} not found`)\n    }\n\n    envVars[variableName as keyof E] = defaultValue\n  })\n\n  return envVars\n}\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,UAAAE,EAAA,WAAAC,EAAA,WAAAC,EAAA,WAAAC,EAAA,YAAAC,IAAA,eAAAC,EAAAP,GAAO,IAAMK,EAAS,OAAO,YAAY,EAC5BF,EAAS,OAAO,YAAY,EAC5BC,EAAS,OAAO,YAAY,EAC5BF,EAAO,OAAO,UAAU,EAIrC,SAASM,EAAWC,EAAeC,EAAuB,CACxD,OAAQA,EAAM,CACZ,KAAKP,EACH,OAAO,OAAOM,CAAK,EAGrB,KAAKL,EACH,OAAO,KAAK,MAAMK,CAAK,EAGzB,KAAKP,EACH,OAAO,IAAI,KAAKO,CAAK,EAGvB,QACE,OAAOA,CAEX,CACF,CAEe,SAARH,EACLK,EACAC,EAGA,CACA,IAAMC,EAEF,CAAC,EAEL,cAAO,QAAQF,CAAiB,EAAE,QAAQ,CAAC,CAACG,EAAcC,CAAY,IAAM,CAC1E,GAAI,QAAQ,IAAID,CAAY,EAAG,CAC7BD,EAAQC,CAAuB,EAAIN,EACjC,QAAQ,IAAIM,CAAY,EACxBC,CACF,EACA,OAGF,IAAMC,EAAeJ,EAAcE,CAAuB,EAC1D,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,wBAAwBF,aAAwB,EAGlED,EAAQC,CAAuB,EAAIE,CACrC,CAAC,EAEMH,CACT","names":["src_exports","__export","DATE","NUMBER","OBJECT","STRING","forceEnvironmentVars","__toCommonJS","parseValue","value","type","environmentSchema","defaultValues","envVars","variableName","variableType","defaultValue"]}